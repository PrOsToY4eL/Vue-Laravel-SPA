<?php

namespace Tests\Unit;

use App\Customer;
use App\User;
use Mockery;
use Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;
use App\Wrappers\UserCreateWrapper;


class RegisterTest extends TestCase
{
    //private $userCreateMock;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        //$this->userCreateMock = Mockery::mock(UserCreateWrapper::class);
    }

    /**
     * A basic test example.
     *
     * @return void
     */
    public function test_user_created()
    {
        //$this->setUp();
        $credentials = [
            'email' => 'test@gmal.com',
            'password' => 'sec',
            'name' => 'UserTestName'
        ];
        $userCreateMock = Mockery::mock(UserCreateWrapper::class);
        $userCreateMock->shouldReceive('createUser')
            ->with($credentials)->andReturn(new User());

        $user = $userCreateMock->createUser($credentials);

        $this->assertInstanceOf(User::class, $user);

        $this->assertNotNull($user);

        //$this->assertTrue($credentials['email'] == $user->email);
//        $this->assertTrue($credentials['password'] === $user->password);
//        $this->assertTrue($credentials['name'] === $user->nane);


    }
}
